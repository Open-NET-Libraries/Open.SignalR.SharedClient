@rendermode InteractiveWebAssembly
@inject INamedScopedHubConnectionFactory HubConnectionProvider
@implements IDisposable

@currentCount

@code {
    private int? currentCount = null;

    private IScopedHubConnection? HubConnection;

    protected override void OnInitialized()
    {
        HubConnection = HubConnectionProvider
            .GetGonnectionByName("counter");

        HubConnection.On<int>("OnNext", count =>
        {
            currentCount = count;
            StateHasChanged();
        });

        HubConnection.OnConnected(async () =>
        {
            currentCount = await HubConnection.InvokeAsync<int>("GetLatest");
            StateHasChanged();
        });

        base.OnInitialized();
    }

    // This disposes our scoped instance but not the underlying connection.
    public void Dispose()
        => HubConnection?.Dispose();
}
